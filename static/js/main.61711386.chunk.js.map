{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/users.module.css","serviceWorker.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","postsBlock","posts","header","descriptionBlock","item","userPhoto","Boolean","window","location","hostname","match","initialState","id","message","likesCount","newPostText","profileReducer","state","arguments","length","undefined","action","type","newPost","Object","objectSpread","concat","toConsumableArray","newText","dialogs","name","messages","newMessageBody","dialogsReducer","body","sidebarReducer","users","usersReducer","map","u","userId","followed","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","react_default","a","createElement","className","s","src","Navbar","nav","react_router_dom","to","activeClassName","activeLink","active","ProfileInfo","Post","props","MyPosts","postsElements","p","MyPosts_Post_Post","newPostElement","React","createRef","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","DialogItem","path","dialog","Message","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","dialogsItems","e","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","Users","setUsers","photoUrl","fullName","status","city","country","styles","unfollow","follow","followAC","unfollowAC","setUsersAC","App","components_Header_Header","components_Navbar_Navbar","react_router","element","Dialogs_DialogsContainer","components_Profile_Profile","UsersContainer","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61711386.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__36oAd\",\"posts\":\"MyPosts_posts__3vKu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10jaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2BhkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Y_cg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2cfT7\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com'\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ],\r\n    newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n    users: [ ]\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: [ ...state.users, ...action.users ]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followAC = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users })\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <div>\r\n                    <div><textarea value={newMessageBody}\r\n                                   onChange={onNewMessageChange}\r\n                                   placeholder='Enter your message'></textarea></div>\r\n                    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport styles from './users.module.css';\r\n\r\nlet Users = (props) => {\r\n    if (props.users.length === 0) {\r\n        props.setUsers([\r\n                {\r\n                    id: 1,\r\n                    photoUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Dmitry_Nagiev_2017_4.jpg/220px-Dmitry_Nagiev_2017_4.jpg',\r\n                    followed: false,\r\n                    fullName: 'Dmitry',\r\n                    status: 'I am a boss',\r\n                    location: {city: 'Minsk', country: 'Belarus'}\r\n                },\r\n                {\r\n                    id: 2,\r\n                    photoUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Dmitry_Nagiev_2017_4.jpg/220px-Dmitry_Nagiev_2017_4.jpg',\r\n                    followed: true,\r\n                    fullName: 'Sasha',\r\n                    status: 'I am a boss too',\r\n                    location: {city: 'Moscow', country: 'Russia'}\r\n                },\r\n                {\r\n                    id: 3,\r\n                    photoUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Dmitry_Nagiev_2017_4.jpg/220px-Dmitry_Nagiev_2017_4.jpg',\r\n                    followed: false,\r\n                    fullName: 'Andrew',\r\n                    status: 'I am a boss too',\r\n                    location: {city: 'Kiev', country: 'Ukraine'}\r\n                }\r\n            ]\r\n        )\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={u.photoUrl} className={styles.userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</button>\r\n                            : <button onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.fullName}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{u.location.country}</div>\r\n                        <div>{u.location.city}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setUsersAC, unfollowAC} from \"../../redux/users-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport {Route, Routes} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nconst App = () => {\n  return (\n      <div className='app-wrapper'>\n        <Header />\n        <Navbar />\n        <div className='app-wrapper-content'>\n            <Routes>\n                <Route path='/dialogs'\n                       element={ <DialogsContainer /> }/>\n\n                <Route path='/profile'\n                       element={  <Profile /> }/>\n\n                <Route path='/users'\n                       element={  <UsersContainer /> }/>\n            </Routes>\n\n\n\n        </div>\n      </div>\n  )\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1sQ1n\",\"item\":\"Navbar_item__By_wy\",\"activeLink\":\"Navbar_activeLink__1kKHn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1dvvu\",\"dialogsItems\":\"Dialogs_dialogsItems__1_xOp\",\"active\":\"Dialogs_active__1w25E\",\"messages\":\"Dialogs_messages__2VZhd\",\"message\":\"Dialogs_message__e5u7p\"};"],"sourceRoot":""}